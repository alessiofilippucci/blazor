@using BlazorServer.Infrastructure
@inherits LayoutComponentBase
@inject AuthProvider AuthProvider
@inject ILocalStorageService LocalStorage

<div class="page">
    @if (IsLoading)
    {
        <div id="blazor-error-ui">
            Loading...
        </div>
    }
    else
    {
        <AuthorizeView>
            <Authorized>
                <div class="sidebar">
                    <NavMenu />
                </div>
                <main>
                    <div class="top-row px-4">
                        <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
                        <span class="ml-4">@context.User.Identity?.Name</span>
                    </div>

                    <article class="content px-4">
                        @Body
                    </article>
                </main>
            </Authorized>
            <NotAuthorized>
                <main>
                    <div class="top-row px-4">
                        <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
                    </div>
                    <article class="content px-4">
                        <Login />
                    </article>
                </main>
            </NotAuthorized>
        </AuthorizeView>
    }
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    protected bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsLoading)
        {
            var token = await LocalStorage.GetItemAsync<string>("token");

            await AuthProvider?.CheckTokenAsync(token);

            IsLoading = false;
            StateHasChanged();
        }
    }

}